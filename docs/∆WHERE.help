   res ←  opts ∆WHERE name1 [name2 ...]
   Syntax: For each object nameN, return the namespace where it was found as well as whether found in caller namespace (see opts),
           in ⎕PATH, or anywhere in the workspace. opts include the caller (reference) namespace and/or a long-form flag (default 0).
           
   ⍺/opts: [caller [longForm]] | [longForm [caller]]
      caller:   the current namespace (or the caller namespace). Must be a namespace reference or omitted.
      longForm: a flag (default 0) indicating whether to use the long form of the namespace type or the short form.
                    1 if type is a long-form alphabetic description. Also, will return the name of each object in the return field.
                    0 if type is a short-form numeric descriptor (see below).
   ⍵, a list of names: name1 [name2 ...]
   returning
           name where type1     (if longForm=1)
           where type2          (if longForm=0)
      where
           name          the name we are looking for
           where         a reference to the namespace where found, else ⎕NULL (if ⍵ not found or invalid)
           type1         either a number (type1) or string (type2), depending on longForm (0 or 1)
                type1 type2
                1.1   caller       item in caller (or other reference) NS (default: caller ns)
                1.2   path         item in ⎕PATH, but not current NS
                1.3   elsewhere    item found outside current NS and ⎕PATH
                0     notFound     item not found
               ¯1     invalid       name is invalid
   Note that ∆WHERE works with respect to a namespace.
   Only functions and operators are searched outside the current namespace.
