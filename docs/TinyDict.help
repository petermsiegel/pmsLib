  ⍝      TinyDict (namespace TinyDictNs)
  ⍝
  ⍝ A simple, namespace-based, dictionary. Fast, low overhead.
  ⍝ A tinyDict is an ordered dictionary, with items stored in the order entered;
  ⍝ an item whose value is replaced maintains its original ordered position. 
  ⍝ (Order can be changed only by deleting and re-entering an item via Del and Put/1).
  ⍝  NB: ∆TINYDICT is promoted to the same namespace as <tinyDict>, when it's ⎕FIXED.
  ⍝      a←∆TINYDICT pairs 
  ⍝  is comparable to (regular) dict function ∆DICT, which is similarly promoted.
  ⍝  See also:  (namespace) dict
  ⍝
  ⍝ dict ← TinyDict.new
  ⍝     Creates a dictionary with no values and Default←⍬
  ⍝
  ⍝ dict ← {default} ∆TINYDICT pairs   (promoted to directory containing TinyDict)
  ⍝     pairs: key-value pairs of the form (k1 v1)(k2 v2)...(kN vN)
  ⍝     Creates a dictionary with key-value pairs specified and (optional) default.
  ⍝     If no default is specified, default is undefined.
  ⍝
  ⍝ r←dict.get  key1 key2 ...
  ⍝     Like dict.get1, but for multiple keys.
  ⍝
  ⍝ r←dict.get1 key
  ⍝     Returns the value for key <key>, if defined.
  ⍝     If not, but a default exists, returns that default.
  ⍝     Otherwise, signals a key-undefined error.
  ⍝     If there is one key, dict.Get1 key ≡≡ ⊃dict.Get key
  ⍝
  ⍝ {values}←key1 key2 ... dict.put val1 val2 ...    [DYADIC: keys put values]
  ⍝     Like dict.put1, but for multiple keys and values.
  ⍝
  ⍝ {values}←dict.put  (key1 val1)(key2 val2)...     [MONADIC: put (k1 v1)(k2 v2)...]
  ⍝     Enter one or more key-value pairs into the tinyDict.
  ⍝     Remember to enclose the argument if there is only one key-value pair:
  ⍝        r←dict.put ⊂'key1' 'val1'
  ⍝        r←dict.put ('key1' 'val1')('key2' 'val2')
  ⍝
  ⍝ {value}←key1 dict.put1 val1
  ⍝     Sets the key specified to the corresponding value, returning the value.
  ⍝     To set multiple keys, see put or put_pairs
  ⍝
  ⍝ {r}←dict.del1 key
  ⍝     Deletes the specified key. If it existed (and was deleted), returns 1; else 0.
  ⍝
  ⍝ {r}←dict.del key1 key2 ...
  ⍝     Deletes the specified keys. Returns 1 for each that is found; 0 otherwise.
  ⍝
  ⍝ r←dict.table
  ⍝     Returns key-value pairs as a table.
  ⍝
  ⍝ dict.default←def   (See new and ∆TINYDICT for initial value).
  ⍝     Sets the default to be returned for the value returned when a key is not found.
  ⍝     dict.default may be undefined.
  ⍝     To make undefined, do: dict.⎕EX 'default'
  ⍝ 
  ⍝ dict.has_default (function)
  ⍝     Returns 1 if a default has been defined.
  ⍝     Returns 0 if no default has been defined.
  ⍝
  ⍝ dict.keys
  ⍝     A list of keys in order
  ⍝
  ⍝ dict.vals
  ⍝ dict.values
  ⍝     A (corresponding) list of values in order

  ⍝ TinyDict.help
  ⍝     Report this HELP information (as an edit [⎕ED] window).
